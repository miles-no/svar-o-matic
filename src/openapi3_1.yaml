openapi: 3.1.0
info:
  title: Swagger - Svar-o-Matic
  description: |-
    This is the backend for a solution that allows employees of Miles AS to efficiently match incoming project requests with existing consultant expertise.

    Some useful links:
    - [The Svar-o-Matic repository](https://github.com/miles-no/svar-o-matic)

  termsOfService: http://swagger.io/terms/
  contact:
    email: drift@miles.no
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:5090
tags:
  - name: CV
    description: All operations related to CV of consultants
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /cv:
    put:
      tags:
        - cv
      summary: Update an existing CV
      description: Update an existing CV by Id
      operationId: updateCV
      requestBody:
        description: Update an existent cv
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cv"
          application/xml:
            schema:
              $ref: "#/components/schemas/cv"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/cv"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cv"
            application/xml:
              schema:
                $ref: "#/components/schemas/cv"
        "400":
          description: Invalid ID supplied
        "404":
          description: CV not found
        "405":
          description: Validation exception
      security:
        - svaromatic_cv_auth:
            - write:cvs
            - read:cvs
    post:
      tags:
        - cv
      summary: Add a new CV to a consultant profile
      description: Add a new CV to a consultant profile
      operationId: addCV
      requestBody:
        description: Add a new CV for a consultant in the app
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cv"
          application/xml:
            schema:
              $ref: "#/components/schemas/cv"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/cv"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cv"
            application/xml:
              schema:
                $ref: "#/components/schemas/cv"
        "405":
          description: Invalid input
      security:
        - svaromatic_cv_auth:
            - write:cvs
            - read:cvs
  /cv/findByConsultant/{consultantId}:
    get:
      tags:
        - cv
      summary: Finds CVs by consultant
      description: Multiple CV values can be provided with comma separated strings
      operationId: findCVsByConsultant
      parameters:
        - name: consultantId
          in: path
          description: Id of the consultant that the search is limited to
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/cv"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/cv"
        "400":
          description: Invalid status value
      security:
        - svaromatic_cv_auth:
            - write:cvs
            - read:cvs
  /cv/{cvId}:
    get:
      tags:
        - cv
      summary: Find CV by ID
      description: Returns a single CV
      operationId: getCVById
      parameters:
        - name: cvId
          in: path
          description: ID of CV to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cv"
            application/xml:
              schema:
                $ref: "#/components/schemas/cv"
        "400":
          description: Invalid ID supplied
        "404":
          description: CV not found
      security:
        - api_key: []
        - svaromatic_cv_auth:
            - write:cvs
            - read:cvs
components:
  schemas:
    cv:
      required:
        - consultantId
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples: [10]
        name:
          type: string
          examples: [doggie]
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
      xml:
        name: cv
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: "##default"
  requestBodies:
    Pet:
      description: CVs that needs to be added to a consultant
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/cv"
        application/xml:
          schema:
            $ref: "#/components/schemas/cv"
  securitySchemes:
    svaromatic_cv_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://coming-soon.swagger.io/oauth/authorize
          scopes:
            write:cvs: modify cvs in your account
            read:cvs: read your cvs
    api_key:
      type: apiKey
      name: api_key
      in: header
